[{"title":"Hello World","path":"/2025/04/17/hello-world/","content":"Welcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/one-command-deployment.html)"},{"path":"/css/main.css","content":"// 无需修改的常量\n@import '_defines/const'\n\n// 自定义参数\n@import '_custom'\n\n// 含自定义参数的常量以及函数\n@import '_defines/theme'\n@import '_defines/func'\n\n// 通用组件\n@import '_common/*'\n// 布局\n@import '_components/*'\n\n// 可选插件\n@import '_plugins/index'"},{"path":"/js/check_outdated_browser.js","content":"function checkOutdatedBrowser() {\n  'use strict'\n\n  if ('ActiveXObject' in window) {\n    return false\n  }\n\n  if (typeof Symbol == 'undefined') return false\n  try {\n    eval('class Foo {}')\n    eval('var bar = (x) => x+1')\n  } catch (e) {\n    return false\n  }\n\n  return true\n}\n\nif (checkOutdatedBrowser() === false) {\n  document.getElementById('start').innerHTML =\n    '<div style=\"margin-top: 32px\"><h1>喔唷!</h1><p><span>你的浏览器太老了，无法正常浏览本站。</span><br/><span>请升级你的浏览器。</span></p><hr/><p><span>支持的浏览器版本如下:</span><ul><li>Chrome 58+</li><li>Firefox 52+</li><li>Edge 14+</li><li>Opera 45+</li><li>Safari 10+</li></ul></p></div>'\n}"},{"path":"/js/main.js","content":"// welcome\n;(() => {\n  console.log(\n    `\\n %c Hexo theme Stellaris %c ${stellar.github} %c \\n \\n`,\n    'color: #eff4f9; background: #030307; padding: 5px; border-radius: 4px 0 0 4px;',\n    'background: #eff4f9; padding: 5px; border-radius: 0 4px 4px 0;',\n    ''\n  )\n  console.log('By Kirikaze Chiyuki')\n})()\n\n// utils\nconst util = {\n  // https://github.com/jerryc127/hexo-theme-butterfly\n  diffDate: (d, more = false) => {\n    const dateNow = new Date()\n    const datePost = new Date(d)\n    const dateDiff = dateNow.getTime() - datePost.getTime()\n    const minute = 1000 * 60\n    const hour = minute * 60\n    const day = hour * 24\n    const month = day * 30\n\n    let result\n    if (more) {\n      const monthCount = dateDiff / month\n      const dayCount = dateDiff / day\n      const hourCount = dateDiff / hour\n      const minuteCount = dateDiff / minute\n\n      if (monthCount > 12) {\n        result = null\n      } else if (monthCount >= 1) {\n        result = parseInt(monthCount) + ' ' + stellar.config.date_suffix.month\n      } else if (dayCount >= 1) {\n        result = parseInt(dayCount) + ' ' + stellar.config.date_suffix.day\n      } else if (hourCount >= 1) {\n        result = parseInt(hourCount) + ' ' + stellar.config.date_suffix.hour\n      } else if (minuteCount >= 1) {\n        result = parseInt(minuteCount) + ' ' + stellar.config.date_suffix.min\n      } else {\n        result = stellar.config.date_suffix.just\n      }\n    } else {\n      result = parseInt(dateDiff / day)\n    }\n    return result\n  },\n\n  copy: (id, msg) => {\n    const el = document.getElementById(id)\n    if (el) {\n      el.select()\n      document.execCommand('Copy')\n      if (msg && msg.length > 0) {\n        hud.toast(msg)\n      }\n    }\n  },\n\n  toggle: (id) => {\n    const el = document.getElementById(id)\n    if (el) {\n      el.classList.toggle('display')\n    }\n  },\n}\n\nconst hud = {\n  toast: (msg, duration) => {\n    duration = isNaN(duration) ? 2000 : duration\n    var el = document.createElement('div')\n    el.classList.add('toast')\n    el.innerHTML = msg\n    document.body.appendChild(el)\n    setTimeout(function () {\n      var d = 0.5\n      el.style.webkitTransition =\n        '-webkit-transform ' + d + 's ease-in, opacity ' + d + 's ease-in'\n      el.style.opacity = '0'\n      setTimeout(function () {\n        document.body.removeChild(el)\n      }, d * 1000)\n    }, duration)\n  },\n}\n\nconst sidebar = {\n  toggle: () => {\n    const l_body = document.querySelector('.l_body')\n    if (l_body) {\n      l_body.classList.add('mobile')\n      l_body.classList.toggle('sidebar')\n    }\n  },\n}\n\nconst stellaris = {\n  themePlugins: {},\n  registerThemePlugin: function (selector, plugin) {\n    this.themePlugins[selector] = plugin\n    stellaris.jQuery(() =>\n      $(() => {\n        plugin.init()\n      })\n    )\n  },\n  pluginsConfig: {\n    fancyBoxSelector: '',\n  },\n  jQuery(fn) {\n    const { status } = stellaris.jQueryState\n    if (typeof window.jQuery !== 'undefined' || status === 'loaded') {\n      fn()\n    } else if (status === 'loading') {\n      stellaris.jQueryState.promise.then(fn)\n    } else {\n      stellaris.jQueryState.status = 'loading'\n      stellaris.jQueryState.promise = stellar\n        .loadScript(stellar.plugins.jQuery)\n        .then(() => {\n          stellaris.jQueryState.status = 'loaded'\n        })\n        .then(fn)\n    }\n  },\n  jQueryState: {\n    status: 'none',\n    promise: null,\n  },\n  loadCSS: {\n    fancyBox: () => {\n      if (stellar.plugins.fancybox)\n        stellar.loadCSS(stellar.plugins.fancybox.css)\n    },\n    swiper: () => {\n      if (stellar.plugins.swiper) stellar.loadCSS(stellar.plugins.swiper.css)\n    },\n  },\n  load: {\n    swiper: () => {\n      if (stellar.plugins.swiper) {\n        const swiper_api = document.getElementById('swiper-api')\n        if (swiper_api != undefined) {\n          stellar.loadCSS(stellar.plugins.swiper.css)\n          stellar\n            .loadScript(stellar.plugins.swiper.js, { defer: true })\n            .then(stellaris.init.swiper)\n        }\n      }\n    },\n    scrollReveal: () => {\n      if (stellar.plugins.scrollreveal) {\n        stellar\n          .loadScript(stellar.plugins.scrollreveal.js)\n          .then(stellaris.init.scrollReveal)\n      }\n    },\n    lazyLoad: () => {\n      if (stellar.plugins.lazyload) {\n        stellar.loadScript(stellar.plugins.lazyload.js, { defer: true })\n        // https://www.npmjs.com/package/vanilla-lazyload\n        // Set the options globally\n        // to make LazyLoad self-initialize\n        window.lazyLoadOptions = {\n          elements_selector: '.lazy',\n        }\n        // Listen to the initialization event\n        // and get the instance of LazyLoad\n        window.addEventListener(\n          'LazyLoad::Initialized',\n          (event) => {\n            window.lazyLoadInstance = event.detail.instance\n          },\n          false\n        )\n        stellaris.init.lazyLoad()\n      }\n    },\n    fancyBox: () => {\n      if (stellar.plugins.fancybox) {\n        let selector = 'img[fancybox]:not(.error)'\n        if (stellar.plugins.fancybox.selector) {\n          selector += `, ${stellar.plugins.fancybox.selector}`\n        }\n        stellaris.pluginsConfig.fancyBoxSelector = selector\n        stellar.loadCSS(stellar.plugins.fancybox.css)\n        stellar\n          .loadScript(stellar.plugins.fancybox.js, { defer: true })\n          .then(stellaris.init.fancyBox)\n      }\n    },\n    search: () => {\n      if (stellar.search.service && stellar.search.service == 'local_search') {\n        stellar\n          .loadScript(stellar.search.js, { defer: true })\n          .then(stellaris.init.search)\n      }\n    },\n    copyCode: () => {\n      if (stellar.plugins.copycode) {\n        stellar.loadScript(stellar.plugins.copycode.js, { defer: true })\n      }\n    },\n    themePlugins: () => {\n      // stellar js\n      if (stellar.plugins.stellar) {\n        for (let key of Object.keys(stellar.plugins.stellar)) {\n          stellar.loadScript(stellar.plugins.stellar[key], { defer: true })\n          if (key == 'timeline') {\n            stellar.loadScript(stellar.plugins.marked)\n          }\n        }\n      }\n    },\n  },\n  loadNeededCSS: () => {\n    ;['fancyBox', 'swiper'].forEach((css) => {\n      stellaris.loadCSS[css]()\n    })\n  },\n  loadAllPlugins: () => {\n    ;[\n      'scrollReveal',\n      'lazyLoad',\n      'fancyBox',\n      'swiper',\n      'search',\n      'copyCode',\n      'themePlugins',\n    ].forEach((plugin) => {\n      stellaris.load[plugin]()\n    })\n  },\n  loadNeededPlugins: () => {\n    ;['lazyLoad', 'fancyBox', 'swiper'].forEach((plugin) => {\n      stellaris.load[plugin]()\n    })\n  },\n  init: {\n    toc: () => {\n      stellaris.jQuery(() => {\n        const scrollOffset = 32\n        var segs = []\n        $('article.md-text :header').each(function (idx, node) {\n          segs.push(node)\n        })\n        // 滚动\n        $(document, window).scroll(function (e) {\n          var scrollTop = $(this).scrollTop()\n          var topSeg = null\n          for (var idx in segs) {\n            var seg = $(segs[idx])\n            if (seg.offset().top > scrollTop + scrollOffset) {\n              continue\n            }\n            if (!topSeg) {\n              topSeg = seg\n            } else if (seg.offset().top >= topSeg.offset().top) {\n              topSeg = seg\n            }\n          }\n          if (topSeg) {\n            $('.toc#toc a.toc-link').removeClass('active')\n            var link = '#' + topSeg.attr('id')\n\n            if (link != '#undefined') {\n              const highlightSelector =\n                '.toc#toc a.toc-link[href=\"' + encodeURI(link) + '\"]'\n              const highlightItem = $(highlightSelector)\n              if (highlightItem.length > 0) {\n                highlightItem.addClass('active')\n                const e0 = document.querySelector('.widgets')\n                const e1 = document.querySelector(highlightSelector)\n                const offsetBottom =\n                  e1.getBoundingClientRect().bottom -\n                  e0.getBoundingClientRect().bottom +\n                  200\n                const offsetTop =\n                  e1.getBoundingClientRect().top -\n                  e0.getBoundingClientRect().top -\n                  64\n                if (offsetTop < 0) {\n                  e0.scrollBy(0, offsetTop)\n                } else if (offsetBottom > 0) {\n                  e0.scrollBy(0, offsetBottom)\n                }\n              }\n            } else {\n              $('.toc#toc a.toc-link:first').addClass('active')\n            }\n          }\n        })\n      })\n    },\n    sidebar: () => {\n      stellaris.jQuery(() => {\n        $('.toc#toc a.toc-link').click(function (e) {\n          const l_body = document.querySelector('.l_body')\n          l_body.classList.remove('sidebar')\n        })\n      })\n    },\n    clickEvents: () => {\n      stellaris.jQuery(() => {\n        const elements = $('.on-click-event')\n        elements.each((e) => {\n          const el = $(elements[e])\n          el.attr('onclick', el.attr('data-on-click'))\n          el.removeAttr('data-on-click')\n        })\n      })\n    },\n    relativeDate: () => {\n      document.querySelectorAll('#post-meta time').forEach((item) => {\n        const $this = item\n        const timeVal = $this.getAttribute('datetime')\n        let relativeValue = util.diffDate(timeVal, true)\n        if (relativeValue) {\n          $this.innerText = relativeValue\n        }\n      })\n    },\n    /**\n     * Tabs tag listener (without twitter bootstrap).\n     */\n    registerTabsTag: function () {\n      // Binding `nav-tabs` & `tab-content` by real time permalink changing.\n      document.querySelectorAll('.tabs .nav-tabs .tab').forEach((element) => {\n        element.addEventListener('click', (event) => {\n          event.preventDefault()\n          // Prevent selected tab to select again.\n          if (element.classList.contains('active'))\n            return // Add & Remove active class on `nav-tabs` & `tab-content`.\n          ;[...element.parentNode.children].forEach((target) => {\n            target.classList.toggle('active', target === element)\n          })\n          // https://stackoverflow.com/questions/20306204/using-queryselector-with-ids-that-are-numbers\n          const tActive = document.getElementById(\n            element.querySelector('a').getAttribute('href').replace('#', '')\n          )\n          ;[...tActive.parentNode.children].forEach((target) => {\n            target.classList.toggle('active', target === tActive)\n          })\n          // Trigger event\n          tActive.dispatchEvent(\n            new Event('tabs:click', {\n              bubbles: true,\n            })\n          )\n        })\n      })\n\n      window.dispatchEvent(new Event('tabs:register'))\n    },\n    outdatedCheck: () => {\n      if (stellar.article.outdate_month == 0) return\n      const outdatedEl = document.getElementById('outdated')\n      if (!outdatedEl) return\n\n      const judgeOutdated = (postDate, nowDate) => {\n        //判断这两个日期是否相差三个月以上\n        if (nowDate.getFullYear() - postDate.getFullYear() > 0) {\n          return true\n        } else {\n          return (\n            nowDate.getMonth() - postDate.getMonth() >\n            stellar.article.outdate_month\n          )\n        }\n      }\n\n      const postMetaTimes = document\n        .getElementById('post-meta')\n        .getElementsByTagName('time')\n      if (outdatedEl !== null) {\n        if (\n          judgeOutdated(\n            new Date(postMetaTimes[postMetaTimes.length - 1].dateTime), // postDate\n            new Date() // nowDate\n          )\n        ) {\n          outdatedEl.innerText = '，文章内容可能已经过时'\n        }\n      }\n    },\n    search: () => {\n      if (stellar.search.service && stellar.search.service == 'local_search') {\n        stellaris.jQuery(() => {\n          const $inputArea = $('input#search-input')\n          if ($inputArea.length == 0) {\n            return\n          }\n          $inputArea.focus(function () {\n            let path\n            if (stellar.search.service in stellar.search) {\n              path = stellar.search[stellar.search.service].path\n            } else {\n              path = '/search.json'\n            }\n            if (!path.startsWith('/')) {\n              path = '/' + path\n            }\n            const filter = $inputArea.attr('data-filter') || ''\n            searchFunc(path, filter, 'search-input', 'search-result')\n          })\n          $inputArea.keydown(function (e) {\n            if (e.which == 13) {\n              e.preventDefault()\n            }\n          })\n\n          new MutationObserver(function (mutationsList, observer) {\n            if (mutationsList.length == 1) {\n              if (mutationsList[0].addedNodes.length) {\n                $('.search-wrapper').removeClass('noresult')\n              } else if (mutationsList[0].removedNodes.length) {\n                $('.search-wrapper').addClass('noresult')\n              }\n            }\n          }).observe(document.querySelector('div#search-result'), {\n            childList: true,\n          })\n        })\n      }\n    },\n    swiper: () => {\n      if (stellar.plugins.swiper && 'Swiper' in window) {\n        const effect = swiper_api.getAttribute('effect') || ''\n        window.swiper = new Swiper('.swiper#swiper-api', {\n          slidesPerView: 'auto',\n          spaceBetween: 8,\n          centeredSlides: true,\n          effect: effect,\n          loop: true,\n          pagination: {\n            el: '.swiper-pagination',\n            clickable: true,\n          },\n          navigation: {\n            nextEl: '.swiper-button-next',\n            prevEl: '.swiper-button-prev',\n          },\n        })\n      }\n    },\n    scrollReveal: () => {\n      if (stellar.plugins.scrollreveal && 'ScrollReveal' in window) {\n        const selector = 'body .reveal',\n          sr = window.ScrollReveal()\n        sr.destroy()\n        document.querySelectorAll(selector).forEach((e) => {\n          ;['opacity', 'transform'].forEach((cls) => {\n            e.style[cls] = null\n          })\n        })\n\n        const { distance, duration, interval, scale } =\n          stellar.plugins.scrollreveal\n        setTimeout(() => {\n          sr.reveal(selector, {\n            distance,\n            duration,\n            interval,\n            scale,\n            easing: 'ease-out',\n          })\n        }, 50)\n      }\n    },\n    lazyLoad: () => {\n      if (stellar.plugins.lazyload && 'lazyLoadInstance' in window) {\n        window.lazyLoadInstance.update()\n      }\n    },\n    fancyBox: () => {\n      if (stellar.plugins.fancybox && 'Fancybox' in window) {\n        const selector = stellaris.pluginsConfig.fancyBoxSelector\n        if (document.querySelectorAll(selector).length !== 0) {\n          Fancybox.bind(selector, {\n            groupAll: true,\n            hideScrollbar: false,\n            Thumbs: {\n              autoStart: false,\n            },\n            caption: function (fancybox, carousel, slide) {\n              return slide.$trigger.alt || null\n            },\n          })\n        }\n      }\n    },\n    themePlugins: () => {\n      if (stellar.plugins.stellar) {\n        Object.keys(stellaris.themePlugins).forEach((selector) => {\n          const els = document.querySelectorAll(selector)\n          if (els != undefined && els.length > 0) {\n            stellaris.jQuery(() =>\n              $(() => {\n                stellaris.themePlugins[selector].init()\n              })\n            )\n          }\n        })\n      }\n    },\n  },\n  initPageComponents: () => {\n    ;[\n      'toc',\n      'sidebar',\n      'clickEvents',\n      'relativeDate',\n      'registerTabsTag',\n      'outdatedCheck',\n    ].forEach((component) => {\n      stellaris.init[component]()\n    })\n  },\n  initPlugins: () => {\n    ;[\n      'scrollReveal',\n      'lazyLoad',\n      'fancyBox',\n      'swiper',\n      'search',\n      'themePlugins',\n    ].forEach((plugin) => {\n      stellaris.init[plugin]()\n    })\n  },\n  initOnFirstLoad: () => {\n    console.log(`New page loaded: ${window.location.pathname}`)\n    stellaris.loadNeededPlugins()\n    stellaris.initPageComponents()\n  },\n  initOnPageChange: () => {\n    console.log(`Page loaded: ${window.location.pathname}`)\n    stellaris.loadNeededCSS()\n    stellaris.loadNeededPlugins()\n    stellaris.initPageComponents()\n    stellaris.initPlugins()\n  },\n}\n\nwindow.addEventListener('load', stellaris.loadAllPlugins, false)\nwindow.addEventListener('load', stellaris.initOnFirstLoad, false)\nInstantClick.on('change', stellaris.initOnPageChange)"},{"path":"/js/plugins/fcircle.js","content":";(() => {\n  const FCircle = {\n    requestAPI: (url, callback, timeout) => {\n      let retryTimes = 5\n      function request() {\n        return new Promise((resolve, reject) => {\n          let status = 0 // 0 等待 1 完成 2 超时\n          let timer = setTimeout(() => {\n            if (status === 0) {\n              status = 2\n              timer = null\n              reject('请求超时')\n              if (retryTimes == 0) {\n                timeout()\n              }\n            }\n          }, 5000)\n          fetch(url)\n            .then(function (response) {\n              if (status !== 2) {\n                clearTimeout(timer)\n                resolve(response)\n                timer = null\n                status = 1\n              }\n              if (response.ok) {\n                return response.json()\n              }\n              throw new Error('Network response was not ok.')\n            })\n            .then(function (data) {\n              retryTimes = 0\n              callback(data)\n            })\n            .catch(function (error) {\n              if (retryTimes > 0) {\n                retryTimes -= 1\n                setTimeout(() => {\n                  request()\n                }, 5000)\n              } else {\n                timeout()\n              }\n            })\n        })\n      }\n      request()\n    },\n    layoutDiv: function (cfg) {\n      const el = $(cfg.el)[0]\n      $(el).append(\n        '<div class=\"loading-wrap\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"2rem\" height=\"2rem\" preserveAspectRatio=\"xMidYMid meet\" viewBox=\"0 0 24 24\"><g fill=\"none\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-width=\"2\"><path stroke-dasharray=\"60\" stroke-dashoffset=\"60\" stroke-opacity=\".3\" d=\"M12 3C16.9706 3 21 7.02944 21 12C21 16.9706 16.9706 21 12 21C7.02944 21 3 16.9706 3 12C3 7.02944 7.02944 3 12 3Z\"><animate fill=\"freeze\" attributeName=\"stroke-dashoffset\" dur=\"1.3s\" values=\"60;0\"/></path><path stroke-dasharray=\"15\" stroke-dashoffset=\"15\" d=\"M12 3C16.9706 3 21 7.02944 21 12\"><animate fill=\"freeze\" attributeName=\"stroke-dashoffset\" dur=\"0.3s\" values=\"15;0\"/><animateTransform attributeName=\"transform\" dur=\"1.5s\" repeatCount=\"indefinite\" type=\"rotate\" values=\"0 12 12;360 12 12\"/></path></g></svg></div>'\n      )\n      this.requestAPI(\n        cfg.api,\n        function (data) {\n          $(el).find('.loading-wrap').remove()\n          const arr = data.article_data || []\n          const limit = el.getAttribute('limit')\n          arr.forEach((item, i) => {\n            if (limit && i >= limit) {\n              return\n            }\n            var cell = '<div class=\"timenode\" index=\"' + i + '\">'\n            cell += '<div class=\"header\">'\n            cell += '<div class=\"user-info\">'\n            cell +=\n              '<img src=\"' +\n              (item.avatar || cfg.avatar) +\n              '\" onerror=\"javascript:this.src=\\'' +\n              cfg.avatar +\n              '\\';\">'\n            cell += '<span>' + item.author + '</span>'\n            cell += '</div>'\n            cell += '<p>' + item.created + '</p>'\n            cell += '</div>'\n            cell +=\n              '<a class=\"body\" href=\"' +\n              item.link +\n              '\" target=\"_blank\" rel=\"external nofollow noopener noreferrer\">'\n            cell += item.title\n            cell += '</a>'\n            cell += '</div>'\n            $(el).append(cell)\n          })\n        },\n        function () {\n          $(el).find('.loading-wrap svg').remove()\n          $(el)\n            .find('.loading-wrap')\n            .append(\n              '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"2rem\" height=\"2rem\" preserveAspectRatio=\"xMidYMid meet\" viewBox=\"0 0 24 24\"><g fill=\"none\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"><path stroke-dasharray=\"60\" stroke-dashoffset=\"60\" d=\"M12 3L21 20H3L12 3Z\"><animate fill=\"freeze\" attributeName=\"stroke-dashoffset\" dur=\"0.5s\" values=\"60;0\"/></path><path stroke-dasharray=\"6\" stroke-dashoffset=\"6\" d=\"M12 10V14\"><animate fill=\"freeze\" attributeName=\"stroke-dashoffset\" begin=\"0.6s\" dur=\"0.2s\" values=\"6;0\"/></path></g><circle cx=\"12\" cy=\"17\" r=\"1\" fill=\"currentColor\" fill-opacity=\"0\"><animate fill=\"freeze\" attributeName=\"fill-opacity\" begin=\"0.8s\" dur=\"0.4s\" values=\"0;1\"/></circle></svg>'\n            )\n          $(el).find('.loading-wrap').addClass('error')\n        }\n      )\n    },\n    init: function () {\n      const els = document.getElementsByClassName('stellar-fcircle-api')\n      for (let i = 0; i < els.length; i++) {\n        const el = els[i]\n        const api = el.getAttribute('api')\n        if (api == null) {\n          continue\n        }\n        this.layoutDiv({\n          el,\n          api,\n          avatar: stellar.root + 'images/avatar.svg',\n        })\n      }\n    },\n  }\n  stellaris.registerThemePlugin('.stellar-fcircle-api', FCircle)\n})()"},{"path":"/js/plugins/ghinfo.js","content":";(() => {\n  const GitHubInfo = {\n    requestAPI: (url, callback, timeout) => {\n      let retryTimes = 5\n      function request() {\n        return new Promise((resolve, reject) => {\n          let status = 0 // 0 等待 1 完成 2 超时\n          let timer = setTimeout(() => {\n            if (status === 0) {\n              status = 2\n              timer = null\n              reject('请求超时')\n              if (retryTimes == 0) {\n                timeout()\n              }\n            }\n          }, 5000)\n          fetch(url)\n            .then(function (response) {\n              if (status !== 2) {\n                clearTimeout(timer)\n                resolve(response)\n                timer = null\n                status = 1\n              }\n              if (response.ok) {\n                return response.json()\n              }\n              throw new Error('Network response was not ok.')\n            })\n            .then(function (data) {\n              retryTimes = 0\n              callback(data)\n            })\n            .catch(function (error) {\n              if (retryTimes > 0) {\n                retryTimes -= 1\n                setTimeout(() => {\n                  request()\n                }, 5000)\n              } else {\n                timeout()\n              }\n            })\n        })\n      }\n      request()\n    },\n    layout: function (cfg) {\n      const el = $(cfg.el)[0]\n      function fill(data) {\n        for (let key of Object.keys(data)) {\n          $(el)\n            .find('[type=text]#' + key)\n            .text(data[key])\n          $(el)\n            .find('[type=link]#' + key)\n            .attr('href', data[key])\n          $(el)\n            .find('[type=img]#' + key)\n            .attr('src', data[key])\n        }\n      }\n      this.requestAPI(\n        cfg.api,\n        function (data) {\n          const idx = el.getAttribute('index')\n          if (idx != undefined) {\n            const arr = data.content || data\n            if (arr && arr.length > idx) {\n              let obj = arr[idx]\n              obj['latest-tag-name'] = obj['name']\n              fill(arr[idx])\n            }\n          } else {\n            fill(data)\n          }\n        },\n        function () {}\n      )\n    },\n    init: function () {\n      const els = document.getElementsByClassName('stellar-ghinfo-api')\n      for (let i = 0; i < els.length; i++) {\n        const el = els[i]\n        const api = el.getAttribute('api')\n        if (api == null) {\n          continue\n        }\n        this.layout({\n          el,\n          api,\n          class: el.getAttribute('class'),\n        })\n      }\n    },\n  }\n  stellaris.registerThemePlugin('.stellar-ghinfo-api', GitHubInfo)\n})()"},{"path":"/js/plugins/copycode.js","content":";(() => {\n  const CopyCode = {\n    copyCode: async function (codeCopyBtn, currentCode) {\n      if (navigator.clipboard) {\n        try {\n          await navigator.clipboard.writeText(currentCode)\n        } catch (error) {\n          // 未获得用户许可\n          codeCopyBtn.innerText = '未获得用户许可'\n          codeCopyBtn.classList.add('warning')\n          setTimeout(() => {\n            codeCopyBtn.innerText = stellar.plugins.copycode.default_text\n            codeCopyBtn.classList.remove('warning')\n          }, 3000)\n        }\n      } else {\n        codeCopyBtn.innerText = '当前浏览器不支持此API'\n        codeCopyBtn.classList.add('warning')\n        setTimeout(() => {\n          codeCopyBtn.innerText = stellar.plugins.copycode.default_text\n          codeCopyBtn.classList.remove('warning')\n        }, 3000)\n      }\n    },\n    init: function () {\n      document.querySelectorAll('.code').forEach((codeElement) => {\n        const codeElementStyle = window.getComputedStyle(\n          codeElement,\n          '::before'\n        )\n        const codeBeforeWidth = codeElementStyle.width.split('px')[0]\n        const codeBeforePadding = codeElementStyle.padding\n          .split(' ')\n          .pop()\n          .split('px')[0]\n\n        // copy btn\n        const codeCopyBtn = document.createElement('div')\n        codeCopyBtn.classList.add('copy-btn')\n        codeCopyBtn.style.right =\n          Number(codeBeforeWidth) + Number(codeBeforePadding) * 2 + 'px'\n        codeCopyBtn.innerText = stellar.plugins.copycode.default_text\n\n        codeElement.appendChild(codeCopyBtn)\n\n        codeCopyBtn.addEventListener('click', async function (evt) {\n          const self = evt.target\n          await CopyCode.copyCode(\n            self,\n            self.parentElement.children[0]?.innerText\n          )\n\n          self.innerText = stellar.plugins.copycode.success_text\n          self.classList.add('success')\n\n          setTimeout(() => {\n            self.innerText = stellar.plugins.copycode.default_text\n            self.classList.remove('success')\n          }, 3000)\n        })\n      })\n    },\n  }\n  stellaris.registerThemePlugin('.code', CopyCode)\n})()"},{"path":"/js/plugins/bvideo.js","content":";(() => {\n  const BiliCard = {\n    convertNum: (num) => (num >= 1e4 ? (num / 1e4).toFixed(1) + '万' : num),\n    toHHMMSS: (second) =>\n      [Math.floor(second / 3600), Math.floor(second / 60) % 60, second % 60]\n        .map((n) => n.toString().padStart(2, 0))\n        .join(':'),\n    getVideoMessage: async function (id) {\n      const type = id.slice(0, 2).toLowerCase()\n      const vtype = { av: 'aid', bv: 'bvid' }[type]\n      const url = `${stellar.tag_plugins.bvideo.video_info}?vtype=${vtype}&type=${type}&id=${id}`\n      const data = (await (await fetch(url)).json())['data']\n      return data\n        ? {\n            v_id: id,\n            v_title: data['title'],\n            v_time: this.toHHMMSS(data['duration']),\n            v_playview: data['stat']['view'],\n            v_danmaku: this.convertNum(data['stat']['danmaku']),\n            v_type: '视频',\n            v_upname: data['owner']['name'],\n            v_cover: data['pic'],\n          }\n        : {\n            v_id: id,\n            v_title: '出错了！',\n          }\n    },\n    layout: function (el) {\n      const v_id = el.getAttribute('v_id')\n      this.getVideoMessage(v_id).then((data) => {\n        el.children[0].innerHTML = `<div class=\"bvideo-box\">\n              <div class=\"bvideo-cover\">\n                  <div class=\"cover-default\"></div>\n                  <div class=\"bvideo-cover-layer\" style=\"background-image:url(${stellar.tag_plugins.bvideo.image_proxy}${data.v_cover}@320w_200h_1c_!web-space-index-myvideo.webp)\">\n                      <i class=\"icon-video\"></i>\n                  </div>\n                  <span class=\"duration\">${data.v_time}</span>\n              </div>\n              <div class=\"bvideo-info\">\n                  <p class=\"title\">${data.v_title}</p>\n                  <p class=\"card-status\">\n                      <span class=\"play-num\">\n                          <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"16\" width=\"12\" viewBox=\"0 0 384 512\"><path d=\"M73 39c-14.8-9.1-33.4-9.4-48.5-.9S0 62.6 0 80V432c0 17.4 9.4 33.4 24.5 41.9s33.7 8.1 48.5-.9L361 297c14.3-8.7 23-24.2 23-41s-8.7-32.2-23-41L73 39z\"/></svg>\n                          <span>${data.v_playview}</span></span>\n                      <span>\n                          <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"16\" width=\"18\" viewBox=\"0 0 576 512\"><path d=\"M64 80c-8.8 0-16 7.2-16 16V416c0 8.8 7.2 16 16 16H512c8.8 0 16-7.2 16-16V96c0-8.8-7.2-16-16-16H64zM0 96C0 60.7 28.7 32 64 32H512c35.3 0 64 28.7 64 64V416c0 35.3-28.7 64-64 64H64c-35.3 0-64-28.7-64-64V96zm96 64a32 32 0 1 1 64 0 32 32 0 1 1 -64 0zm104 0c0-13.3 10.7-24 24-24H448c13.3 0 24 10.7 24 24s-10.7 24-24 24H224c-13.3 0-24-10.7-24-24zm0 96c0-13.3 10.7-24 24-24H448c13.3 0 24 10.7 24 24s-10.7 24-24 24H224c-13.3 0-24-10.7-24-24zm0 96c0-13.3 10.7-24 24-24H448c13.3 0 24 10.7 24 24s-10.7 24-24 24H224c-13.3 0-24-10.7-24-24zm-72-64a32 32 0 1 1 0-64 32 32 0 1 1 0 64zM96 352a32 32 0 1 1 64 0 32 32 0 1 1 -64 0z\"/></svg>\n                          <span>${data.v_danmaku}</span></span></p>\n                  <div class=\"partition\">\n                      <label class=\"card-label\">${data.v_type}</label>\n                      <label class=\"up-label\"></label>\n                      <label class=\"up-name\">${data.v_upname}</label>\n                  </div>\n                  <div class=\"actions hide\"></div>\n              </div>\n          </div>`\n      })\n    },\n    init: function () {\n      const els = document.getElementsByClassName('bvideo')\n      for (let i = 0; i < els.length; i++) {\n        const el = els[i]\n        this.layout(el)\n      }\n    },\n  }\n  stellaris.registerThemePlugin('.bvideo', BiliCard)\n})()"},{"path":"/js/plugins/sites.js","content":";(() => {\n  const Sites = {\n    requestAPI: (url, callback, timeout) => {\n      let retryTimes = 5\n      function request() {\n        return new Promise((resolve, reject) => {\n          let status = 0 // 0 等待 1 完成 2 超时\n          let timer = setTimeout(() => {\n            if (status === 0) {\n              status = 2\n              timer = null\n              reject('请求超时')\n              if (retryTimes == 0) {\n                timeout()\n              }\n            }\n          }, 5000)\n          fetch(url)\n            .then(function (response) {\n              if (status !== 2) {\n                clearTimeout(timer)\n                resolve(response)\n                timer = null\n                status = 1\n              }\n              if (response.ok) {\n                return response.json()\n              }\n              throw new Error('Network response was not ok.')\n            })\n            .then(function (data) {\n              retryTimes = 0\n              callback(data)\n            })\n            .catch(function (error) {\n              if (retryTimes > 0) {\n                retryTimes -= 1\n                setTimeout(() => {\n                  request()\n                }, 5000)\n              } else {\n                timeout()\n              }\n            })\n        })\n      }\n      request()\n    },\n    layout: function (cfg) {\n      const el = $(cfg.el)[0]\n      $(el).append(\n        '<div class=\"loading-wrap\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"2rem\" height=\"2rem\" preserveAspectRatio=\"xMidYMid meet\" viewBox=\"0 0 24 24\"><g fill=\"none\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-width=\"2\"><path stroke-dasharray=\"60\" stroke-dashoffset=\"60\" stroke-opacity=\".3\" d=\"M12 3C16.9706 3 21 7.02944 21 12C21 16.9706 16.9706 21 12 21C7.02944 21 3 16.9706 3 12C3 7.02944 7.02944 3 12 3Z\"><animate fill=\"freeze\" attributeName=\"stroke-dashoffset\" dur=\"1.3s\" values=\"60;0\"/></path><path stroke-dasharray=\"15\" stroke-dashoffset=\"15\" d=\"M12 3C16.9706 3 21 7.02944 21 12\"><animate fill=\"freeze\" attributeName=\"stroke-dashoffset\" dur=\"0.3s\" values=\"15;0\"/><animateTransform attributeName=\"transform\" dur=\"1.5s\" repeatCount=\"indefinite\" type=\"rotate\" values=\"0 12 12;360 12 12\"/></path></g></svg></div>'\n      )\n      this.requestAPI(\n        cfg.api,\n        function (data) {\n          $(el).find('.loading-wrap').remove()\n          const arr = data.content\n          arr.forEach((item, i) => {\n            var cell = '<div class=\"site-card\">'\n            cell +=\n              '<a class=\"card-link\" target=\"_blank\" rel=\"external nofollow noopener noreferrer\" href=\"' +\n              item.url +\n              '\">'\n            cell +=\n              '<img src=\"' +\n              (item.screenshot ||\n                'https://screenshot.yidaozhan.top/api?url=' +\n                  item.url +\n                  '&width=1280&height=720') +\n              '\" onerror=\"javascript:this.src=\\'' +\n              cfg.screenshot +\n              '\\';\"/>'\n            cell += '<div class=\"info\">'\n            cell +=\n              '<img src=\"' +\n              (item.avatar || cfg.avatar) +\n              '\" onerror=\"javascript:this.src=\\'' +\n              cfg.avatar +\n              '\\';\"/>'\n            cell += '<span class=\"title\">' + item.title + '</span>'\n            cell +=\n              '<span class=\"desc\">' + (item.description || item.url) + '</span>'\n            cell += '</div>'\n            cell += '</a>'\n            cell += '</div>'\n            $(el).find('.group-body').append(cell)\n          })\n        },\n        function () {\n          $(el).find('.loading-wrap svg').remove()\n          $(el)\n            .find('.loading-wrap')\n            .append(\n              '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"2rem\" height=\"2rem\" preserveAspectRatio=\"xMidYMid meet\" viewBox=\"0 0 24 24\"><g fill=\"none\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"><path stroke-dasharray=\"60\" stroke-dashoffset=\"60\" d=\"M12 3L21 20H3L12 3Z\"><animate fill=\"freeze\" attributeName=\"stroke-dashoffset\" dur=\"0.5s\" values=\"60;0\"/></path><path stroke-dasharray=\"6\" stroke-dashoffset=\"6\" d=\"M12 10V14\"><animate fill=\"freeze\" attributeName=\"stroke-dashoffset\" begin=\"0.6s\" dur=\"0.2s\" values=\"6;0\"/></path></g><circle cx=\"12\" cy=\"17\" r=\"1\" fill=\"currentColor\" fill-opacity=\"0\"><animate fill=\"freeze\" attributeName=\"fill-opacity\" begin=\"0.8s\" dur=\"0.4s\" values=\"0;1\"/></circle></svg>'\n            )\n          $(el).find('.loading-wrap').addClass('error')\n        }\n      )\n    },\n    init: function () {\n      const els = document.getElementsByClassName('stellar-sites-api')\n      for (let i = 0; i < els.length; i++) {\n        const el = els[i]\n        const api = el.getAttribute('api')\n        if (api == null) {\n          continue\n        }\n        this.layout({\n          el,\n          api,\n          class: el.getAttribute('class'),\n          avatar: stellar.root + 'images/avatar.svg',\n          screenshot: stellar.root + 'images/cover.svg',\n        })\n      }\n    },\n  }\n  stellaris.registerThemePlugin('.stellar-sites-api', Sites)\n})()"},{"path":"/js/plugins/friends.js","content":";(() => {\n  const Friends = {\n    requestAPI: (url, callback, timeout) => {\n      let retryTimes = 5\n      function request() {\n        return new Promise((resolve, reject) => {\n          let status = 0 // 0 等待 1 完成 2 超时\n          let timer = setTimeout(() => {\n            if (status === 0) {\n              status = 2\n              timer = null\n              reject('请求超时')\n              if (retryTimes == 0) {\n                timeout()\n              }\n            }\n          }, 5000)\n          fetch(url)\n            .then(function (response) {\n              if (status !== 2) {\n                clearTimeout(timer)\n                resolve(response)\n                timer = null\n                status = 1\n              }\n              if (response.ok) {\n                return response.json()\n              }\n              throw new Error('Network response was not ok.')\n            })\n            .then(function (data) {\n              retryTimes = 0\n              callback(data)\n            })\n            .catch(function (error) {\n              if (retryTimes > 0) {\n                retryTimes -= 1\n                setTimeout(() => {\n                  request()\n                }, 5000)\n              } else {\n                timeout()\n              }\n            })\n        })\n      }\n      request()\n    },\n    layout: function (cfg) {\n      const el = $(cfg.el)[0]\n      $(el).append(\n        '<div class=\"loading-wrap\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"2rem\" height=\"2rem\" preserveAspectRatio=\"xMidYMid meet\" viewBox=\"0 0 24 24\"><g fill=\"none\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-width=\"2\"><path stroke-dasharray=\"60\" stroke-dashoffset=\"60\" stroke-opacity=\".3\" d=\"M12 3C16.9706 3 21 7.02944 21 12C21 16.9706 16.9706 21 12 21C7.02944 21 3 16.9706 3 12C3 7.02944 7.02944 3 12 3Z\"><animate fill=\"freeze\" attributeName=\"stroke-dashoffset\" dur=\"1.3s\" values=\"60;0\"/></path><path stroke-dasharray=\"15\" stroke-dashoffset=\"15\" d=\"M12 3C16.9706 3 21 7.02944 21 12\"><animate fill=\"freeze\" attributeName=\"stroke-dashoffset\" dur=\"0.3s\" values=\"15;0\"/><animateTransform attributeName=\"transform\" dur=\"1.5s\" repeatCount=\"indefinite\" type=\"rotate\" values=\"0 12 12;360 12 12\"/></path></g></svg></div>'\n      )\n      this.requestAPI(\n        cfg.api,\n        function (data) {\n          $(el).find('.loading-wrap').remove()\n          const arr = data.content || data\n          arr.forEach((item, i) => {\n            var user = '<div class=\"user-card\">'\n            user +=\n              '<a class=\"card-link\" target=\"_blank\" rel=\"external nofollow noopener noreferrer\"'\n            user += ' href=\"' + (item.html_url || item.url) + '\">'\n            user +=\n              '<img src=\"' +\n              (item.avatar_url || item.avatar || cfg.avatar) +\n              '\" onerror=\"javascript:this.src=\\'' +\n              cfg.avatar +\n              '\\';\">'\n            user +=\n              '<div class=\"name\"><span>' +\n              (item.title || item.login) +\n              '</span></div>'\n            user += '</a>'\n            user += '</div>'\n            $(el).find('.group-body').append(user)\n          })\n        },\n        function () {\n          $(el).find('.loading-wrap svg').remove()\n          $(el)\n            .find('.loading-wrap')\n            .append(\n              '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"2rem\" height=\"2rem\" preserveAspectRatio=\"xMidYMid meet\" viewBox=\"0 0 24 24\"><g fill=\"none\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"><path stroke-dasharray=\"60\" stroke-dashoffset=\"60\" d=\"M12 3L21 20H3L12 3Z\"><animate fill=\"freeze\" attributeName=\"stroke-dashoffset\" dur=\"0.5s\" values=\"60;0\"/></path><path stroke-dasharray=\"6\" stroke-dashoffset=\"6\" d=\"M12 10V14\"><animate fill=\"freeze\" attributeName=\"stroke-dashoffset\" begin=\"0.6s\" dur=\"0.2s\" values=\"6;0\"/></path></g><circle cx=\"12\" cy=\"17\" r=\"1\" fill=\"currentColor\" fill-opacity=\"0\"><animate fill=\"freeze\" attributeName=\"fill-opacity\" begin=\"0.8s\" dur=\"0.4s\" values=\"0;1\"/></circle></svg>'\n            )\n          $(el).find('.loading-wrap').addClass('error')\n        }\n      )\n    },\n    init: function () {\n      const els = document.getElementsByClassName('stellar-friends-api')\n      for (let i = 0; i < els.length; i++) {\n        const el = els[i]\n        const api = el.getAttribute('api')\n        if (api == null) {\n          continue\n        }\n        this.layout({\n          el,\n          api,\n          class: el.getAttribute('class'),\n          avatar: stellar.root + 'images/avatar.svg',\n        })\n      }\n    },\n  }\n  stellaris.registerThemePlugin('.stellar-friends-api', Friends)\n})()"},{"path":"/js/plugins/timeline.js","content":";(() => {\n  const StellarTimeline = {\n    reactions: {\n      '+1': '👍',\n      '-1': '👎',\n      laugh: '😀',\n      hooray: '🎉',\n      confused: '😕',\n      heart: '❤️',\n      rocket: '🚀',\n      eyes: '👀',\n    },\n    requestAPI: (url, callback, timeout) => {\n      let retryTimes = 5\n      function request() {\n        return new Promise((resolve, reject) => {\n          let status = 0 // 0 等待 1 完成 2 超时\n          let timer = setTimeout(() => {\n            if (status === 0) {\n              status = 2\n              timer = null\n              reject('请求超时')\n              if (retryTimes == 0) {\n                timeout()\n              }\n            }\n          }, 5000)\n          fetch(url)\n            .then(function (response) {\n              if (status !== 2) {\n                clearTimeout(timer)\n                resolve(response)\n                timer = null\n                status = 1\n              }\n              if (response.ok) {\n                return response.json()\n              }\n              throw new Error('Network response was not ok.')\n            })\n            .then(function (data) {\n              retryTimes = 0\n              callback(data)\n            })\n            .catch(function (error) {\n              if (retryTimes > 0) {\n                retryTimes -= 1\n                setTimeout(() => {\n                  request()\n                }, 5000)\n              } else {\n                timeout()\n              }\n            })\n        })\n      }\n      request()\n    },\n    layoutDiv: function (cfg) {\n      const el = $(cfg.el)[0]\n      $(el).append(\n        '<div class=\"loading-wrap\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"2rem\" height=\"2rem\" preserveAspectRatio=\"xMidYMid meet\" viewBox=\"0 0 24 24\"><g fill=\"none\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-width=\"2\"><path stroke-dasharray=\"60\" stroke-dashoffset=\"60\" stroke-opacity=\".3\" d=\"M12 3C16.9706 3 21 7.02944 21 12C21 16.9706 16.9706 21 12 21C7.02944 21 3 16.9706 3 12C3 7.02944 7.02944 3 12 3Z\"><animate fill=\"freeze\" attributeName=\"stroke-dashoffset\" dur=\"1.3s\" values=\"60;0\"/></path><path stroke-dasharray=\"15\" stroke-dashoffset=\"15\" d=\"M12 3C16.9706 3 21 7.02944 21 12\"><animate fill=\"freeze\" attributeName=\"stroke-dashoffset\" dur=\"0.3s\" values=\"15;0\"/><animateTransform attributeName=\"transform\" dur=\"1.5s\" repeatCount=\"indefinite\" type=\"rotate\" values=\"0 12 12;360 12 12\"/></path></g></svg></div>'\n      )\n      this.requestAPI(\n        cfg.api,\n        function (data) {\n          $(el).find('.loading-wrap').remove()\n          const query = new URL(cfg.api).search\n          const arr = data.content || data\n          var users = []\n          const filter = el.getAttribute('user')\n          if (filter && filter.length > 0) {\n            users = filter.split(',')\n          }\n          var hide = []\n          const hideStr = el.getAttribute('hide')\n          if (hideStr && hideStr.length > 0) {\n            hide = hideStr.split(',')\n          }\n          arr.forEach((item, i) => {\n            if (item.user && item.user.login && users.length > 0) {\n              if (!users.includes(item.user.login)) {\n                return\n              }\n            }\n            var cell = '<div class=\"timenode\" index=\"' + i + '\">'\n            cell += '<div class=\"header\">'\n            if (!users.length && item.user && !hide.includes('user')) {\n              cell +=\n                '<a class=\"user-info\" href=\"' +\n                item.user.html_url +\n                '\" target=\"_blank\" rel=\"external nofollow noopener noreferrer\">'\n              cell += '<img src=\"' + item.user.avatar_url + '\">'\n              cell += '<span>' + item.user.login + '</span>'\n              cell += '</a>'\n            }\n            let date = new Date(item.created_at)\n            cell +=\n              '<p>' + date.toString().replace(/\\sGMT([^.]*)/i, '') + '</p>'\n            cell += '</div>'\n            cell += '<div class=\"body\">'\n            if (!hide.includes('title')) {\n              cell += '<p class=\"title\">'\n              cell +=\n                '<a href=\"' +\n                item.html_url +\n                '\" target=\"_blank\" rel=\"external nofollow noopener noreferrer\">'\n              cell += item.title || item.name || item.tag_name\n              cell += '</a>'\n              cell += '</p>'\n            }\n\n            cell += marked.parse(item.body || '')\n            if (!hide.includes('footer')) {\n              cell += '<div class=\"footer\">'\n              cell += '<div class=\"flex left\">'\n              if (item.labels) {\n                item.labels.forEach((label, i) => {\n                  if (!query || !query.includes(encodeURI(label.name))) {\n                    cell +=\n                      '<div class=\"item label ' +\n                      label.name +\n                      '\" style=\"background:#' +\n                      label.color +\n                      '18;border-color:#' +\n                      label.color +\n                      '36\">'\n                    cell += '<span>' + label.name + '</span>'\n                    cell += '</div>'\n                  }\n                })\n              } else if (item.zipball_url) {\n                cell +=\n                  '<a class=\"item download\" href=\"' +\n                  item.zipball_url +\n                  '\" target=\"_blank\" rel=\"external nofollow noopener noreferrer\">'\n                cell += '<span>📦 ' + item.tag_name + '.zip</span>'\n                cell += '</a>'\n              }\n              cell += '</div>'\n              cell += '<div class=\"flex right\">'\n              if (item.reactions && item.reactions.total_count > 0) {\n                for (let key of Object.keys(StellarTimeline.reactions)) {\n                  let num = item.reactions[key]\n                  if (num > 0) {\n                    cell += '<div class=\"item reaction ' + key + '\">'\n                    cell +=\n                      '<span>' +\n                      StellarTimeline.reactions[key] +\n                      ' ' +\n                      item.reactions[key] +\n                      '</span>'\n                    cell += '</div>'\n                  }\n                }\n              }\n              if (item.comments != null) {\n                cell +=\n                  '<a class=\"item comments last\" href=\"' +\n                  item.html_url +\n                  '#issuecomment-new\" target=\"_blank\" rel=\"external nofollow noopener noreferrer\">'\n                cell +=\n                  '<span><svg t=\"1666270368054\" class=\"icon\" viewBox=\"0 0 1024 1024\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" p-id=\"2528\" width=\"200\" height=\"200\"><path d=\"M952 64H72C32.3 64 0 96.3 0 136v508c0 39.7 32.3 72 72 72h261l128 128c14 14 32.5 21.1 50.9 21.1s36.9-7 50.9-21.1l128-128h261c39.7 0 72-32.3 72-72V136c0.2-39.7-32.1-72-71.8-72zM222 462c-39.8 0-72-32.2-72-72s32.2-72 72-72 72 32.2 72 72-32.2 72-72 72z m290-7.7c-39.8 0-72-32.2-72-72s32.2-72 72-72 72 32.2 72 72c0 39.7-32.2 72-72 72z m290 8c-39.8 0-72-32.2-72-72s32.2-72 72-72 72 32.2 72 72c0 39.7-32.2 72-72 72z\" p-id=\"2529\"></path></svg> ' +\n                  (item.comments || 0) +\n                  '</span>'\n                cell += '</a>'\n              }\n\n              cell += '</div>'\n              cell += '</div>'\n            }\n\n            cell += '</div>'\n            cell += '</div>'\n            $(el).append(cell)\n          })\n        },\n        function () {\n          $(el).find('.loading-wrap svg').remove()\n          $(el)\n            .find('.loading-wrap')\n            .append(\n              '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"2rem\" height=\"2rem\" preserveAspectRatio=\"xMidYMid meet\" viewBox=\"0 0 24 24\"><g fill=\"none\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"><path stroke-dasharray=\"60\" stroke-dashoffset=\"60\" d=\"M12 3L21 20H3L12 3Z\"><animate fill=\"freeze\" attributeName=\"stroke-dashoffset\" dur=\"0.5s\" values=\"60;0\"/></path><path stroke-dasharray=\"6\" stroke-dashoffset=\"6\" d=\"M12 10V14\"><animate fill=\"freeze\" attributeName=\"stroke-dashoffset\" begin=\"0.6s\" dur=\"0.2s\" values=\"6;0\"/></path></g><circle cx=\"12\" cy=\"17\" r=\"1\" fill=\"currentColor\" fill-opacity=\"0\"><animate fill=\"freeze\" attributeName=\"fill-opacity\" begin=\"0.8s\" dur=\"0.4s\" values=\"0;1\"/></circle></svg>'\n            )\n          $(el).find('.loading-wrap').addClass('error')\n        }\n      )\n    },\n    init: function () {\n      const els = document.getElementsByClassName('stellar-timeline-api')\n      for (let i = 0; i < els.length; i++) {\n        const el = els[i]\n        const api = el.getAttribute('api')\n        if (api == null) {\n          continue\n        }\n        this.layoutDiv({ el, api })\n      }\n    },\n  }\n  stellaris.registerThemePlugin('.stellar-timeline-api', StellarTimeline)\n})()"},{"path":"/js/search/local_search.js","content":"// A local search script with the help of\n// [hexo-generator-search](https://github.com/PaicHyperionDev/hexo-generator-search)\n// Copyright (C) 2015\n// Joseph Pan <http://github.com/wzpan>\n// Shuhao Mao <http://github.com/maoshuhao>\n// This library is free software; you can redistribute it and/or modify\n// it under the terms of the GNU Lesser General Public License as\n// published by the Free Software Foundation; either version 2.1 of the\n// License, or (at your option) any later version.\n//\n// This library is distributed in the hope that it will be useful, but\n// WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n// Lesser General Public License for more details.\n//\n// You should have received a copy of the GNU Lesser General Public\n// License along with this library; if not, write to the Free Software\n// Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA\n// 02110-1301 USA\n//\n// Modified by:\n// Pieter Robberechts <http://github.com/probberechts>\n\n/*exported searchFunc*/\nvar searchFunc = function (path, filter, searchId, contentId) {\n  function getAllCombinations(keywords) {\n    var i,\n      j,\n      result = []\n\n    for (i = 0; i < keywords.length; i++) {\n      for (j = i + 1; j < keywords.length + 1; j++) {\n        result.push(keywords.slice(i, j).join(' '))\n      }\n    }\n    return result\n  }\n\n  $.ajax({\n    url: path,\n    dataType: 'json',\n    success: function (jsonResponse) {\n      var datas = jsonResponse\n      var $input = document.getElementById(searchId)\n      if (!$input) {\n        return\n      }\n      var $resultContent = document.getElementById(contentId)\n\n      $input.addEventListener('input', function () {\n        var resultList = []\n        var keywords = getAllCombinations(\n          this.value.trim().toLowerCase().split(' ')\n        ).sort(function (a, b) {\n          return b.split(' ').length - a.split(' ').length\n        })\n        $resultContent.innerHTML = ''\n        if (this.value.trim().length <= 0) {\n          return\n        }\n        // perform local searching\n        datas.forEach(function (data) {\n          if (data.title) {\n            if (!data.title.trim().length) {\n              return\n            }\n          }\n          if (data.content) {\n            if (!data.content.trim().length) {\n              return\n            }\n          }\n          var matches = 0\n          if (filter && !data.path.includes(filter)) {\n            return\n          }\n          var dataTitle = data.title ? data.title.trim() : ''\n          var dataTitleLowerCase = dataTitle.toLowerCase()\n          var dataContent = data.content\n          var dataContentLowerCase = dataContent.toLowerCase()\n          var dataUrl = data.path\n          var indexTitle = -1\n          var indexContent = -1\n          var firstOccur = -1\n          // only match artiles with not empty contents\n          if (dataContent !== '') {\n            keywords.forEach(function (keyword) {\n              indexTitle = dataTitleLowerCase.indexOf(keyword)\n              indexContent = dataContentLowerCase.indexOf(keyword)\n\n              if (indexTitle >= 0 || indexContent >= 0) {\n                matches += 1\n                if (indexContent < 0) {\n                  indexContent = 0\n                }\n                if (firstOccur < 0) {\n                  firstOccur = indexContent\n                }\n              }\n            })\n          }\n          // show search results\n          if (matches > 0) {\n            var searchResult = {}\n            searchResult.rank = matches\n            searchResult.str =\n              \"<li><a href='\" +\n              dataUrl +\n              \"'><span class='search-result-title'>\" +\n              dataTitle +\n              '</span>'\n            if (firstOccur >= 0) {\n              // cut out 100 characters\n              var start = firstOccur - 20\n              var end = firstOccur + 80\n\n              if (start < 0) {\n                start = 0\n              }\n\n              if (start == 0) {\n                end = 100\n              }\n\n              if (end > dataContent.length) {\n                end = dataContent.length\n              }\n\n              var matchContent = dataContent.substring(start, end)\n\n              // highlight all keywords\n              var regS = new RegExp(keywords.join('|'), 'gi')\n              matchContent = matchContent.replace(regS, function (keyword) {\n                return '<span class=\"search-keyword\">' + keyword + '</span>'\n              })\n\n              searchResult.str +=\n                '<p class=\"search-result-content\">' + matchContent + '...</p>'\n            }\n            searchResult.str += '</a></li>'\n            resultList.push(searchResult)\n          }\n        })\n        if (resultList.length) {\n          resultList.sort(function (a, b) {\n            return b.rank - a.rank\n          })\n          var result = '<ul class=\"search-result-list\">'\n          for (var i = 0; i < resultList.length; i++) {\n            result += resultList[i].str\n          }\n          result += '</ul>'\n          $resultContent.innerHTML = result\n        }\n      })\n    },\n  })\n}"},{"path":"/js/plugins/linkcard.js","content":"// 本插件由CardLink定制而成，原项目源码: https://github.com/Lete114/CardLink\n;(() => {\n  const selector = 'a.link-card[cardlink]'\n  const CardLink = {\n    renderer: function (el, obj) {\n      var autofill = []\n      const autofillStr = el.getAttribute('autofill')\n      if (autofillStr) {\n        autofill = autofillStr.split(',')\n      }\n      if (obj.title && obj.title.length > 0 && autofill.includes('title')) {\n        el.querySelector('.title').innerHTML = obj.title\n        el.title = obj.title\n      }\n      if (obj.icon && obj.icon.length > 0 && autofill.includes('icon')) {\n        el.querySelector('.img').style =\n          'background-image: url(\"' + obj.icon + '\");'\n        el.querySelector('.img').setAttribute('data-bg', obj.icon)\n      }\n      let desc = el.querySelector('.desc')\n      if (\n        desc &&\n        obj.desc &&\n        obj.desc.length > 0 &&\n        autofill.includes('desc')\n      ) {\n        desc.innerHTML = obj.desc\n      }\n    },\n    /**\n     * Create card links\n     * @param {NodeList} nodes A collection of nodes or a collection of arrays,\n     * if it is an array then the array must always contain node element\n     */\n    setCardLink: function (nodes) {\n      // If the `nodes` do not contain a `forEach` method, then the default `a[cardlink]` is used\n      nodes =\n        'forEach' in (nodes || {})\n          ? nodes\n          : document.querySelectorAll('a[cardlink]')\n      nodes.forEach((el) => {\n        // If it is not a tag element then it is not processed\n        if (el.nodeType !== 1) return\n        el.removeAttribute('cardlink')\n        const api = el.getAttribute('api')\n        fetch(api)\n          .then(function (response) {\n            if (response.ok) {\n              return response.json()\n            }\n            throw new Error('Network response was not ok.')\n          })\n          .then(function (data) {\n            CardLink.renderer(el, data)\n          })\n          .catch(function (error) {\n            console.log(error)\n          })\n      })\n    },\n    init: function () {\n      this.setCardLink(document.querySelectorAll(selector))\n    },\n  }\n  stellaris.registerThemePlugin(selector, CardLink)\n})()"}]